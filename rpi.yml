# Configures the Raspberry Pi that handles my home automation
#
# It assumes my user has already been created by rpi_provisioning.yml

- hosts: raspberrypi
  remote_user: "{{ admin_user }}"
  become: yes
  vars:
    admin_user: chesterbr
    admin_email: cd@pobox.com
    external_hostname: chesterbr.duckdns.org
    living_room_light_mac: !vault |
              $ANSIBLE_VAULT;1.1;AES256
              37323938633830353431613134623633356666646539303038656461306536346562393232643639
              3630633530376337303533373232646433373763363430390a336335373764343930636566346666
              62303136623630663565353362306333313536353863373134373738396164333265306636323536
              6466636231363363660a383563323630613531616262643839656537343137303033313439323362
              65363836336533376535376531616136383437376530346264306138643839623262
    bedroom_lamp_mac: !vault |
              $ANSIBLE_VAULT;1.1;AES256
              32653262623432393430616438313634663164303566323833356536326463303765633437366463
              3035316534363435326135636236303934366635333463350a643937663339643739363135356434
              30623035336135393534396231383264343933353635313037393733353336306366626262366636
              3039643233383033390a663137306462653361626565313734383536636462353638653463313736
              66663134366633386461646161663065366665643838663537343634663132373739
    living_room_lamp_on_command: !vault |
              $ANSIBLE_VAULT;1.1;AES256
              32616664393436653466646330613833353062323831383735393832646534643865303135323937
              6662393935656533656131336364323939353366376163660a323165356132313333303430353434
              35363062303264316261376334643164653165373435333765636465383438666638363039326532
              3165643161623030660a616533643732383235363861616133386338633432333964356239346262
              65613964383339303161613132656462366535313861336563313665303338636534
    living_room_lamp_off_command: !vault |
              $ANSIBLE_VAULT;1.1;AES256
              37303133626133303536386362396663623931313934653361366363316534656435363837333766
              6536623931303837396264336261333863366639306236360a633332303563663462646261376434
              31626134306665313535303265323966373935663532636437653535396235326638636630346438
              3430633062336634320a373732336133343766383230306432616461353164326265616438613138
              64316664373635636463333961343437653234376562386131646161626331346166
    google_assistant_project_id: !vault |
              $ANSIBLE_VAULT;1.1;AES256
              36623230363233356335663763386363313137366266653331336439393962653538386432653831
              3064653634323464356666623664656534383838393831350a303163643438636535343335336130
              37646636396436333836316134626531653464346234326461656165303433623937383634356639
              3532613734356232330a383861633835346534613035336430663236326332626566323064643530
              32613766643531303432393231383961633364383637353531663739646637306232
    google_assistant_api_key: !vault |
              $ANSIBLE_VAULT;1.1;AES256
              66633936653136666563376432633461663634346466666337316463363763663363653366363637
              3035393164373663306266613031343062616264626161620a316332626661653563653238323364
              62383330663462303731646232363065323934363738653066386438666634393165336238396362
              3736386165643332320a366430316436336562663738636435663338353237633732653533376230
              64363065653337613963633462356565313730363631663166393833343632646234303434353562
              3533383837653636646432613565306633643536396531653537

  handlers:
  - name: restart ssh
    service: name=ssh state=restarted

  - name: restart unattended-upgrades
    service: name=unattended-upgrades state=restarted

  - name: restart lirc
    service: name=lircd state=restarted

  - name: reboot
    reboot:

  tasks:
  - name: Update packages info (if older than a couple days)
    apt: update_cache=yes cache_valid_time=7200

  - name: Install general utilities
    apt: name={{ packages }} state=present
    vars:
      packages:
        - git               # Required for Ansible git (and for life, IMHO)
        - python-setuptools # Required for Ansible pip ¯\_(ツ)_/¯
        - python3-gpiozero  # Provides pinout (and I ❤️ pinout)

  - name: Install fail2ban.
    block:
      - apt: name=fail2ban state=present
      - service: name=fail2ban state=started enabled=yes

  - name: Update SSH configuration to be more secure (no password/root logins).
    lineinfile:
      dest: "/etc/ssh/sshd_config"
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      state: present
    with_items:
      - regexp: "^PasswordAuthentication"
        line: "PasswordAuthentication no"
      - regexp: "^PermitRootLogin"
        line: "PermitRootLogin no"
    notify: restart ssh

  # Uncomment if you don't want the local pi user
  # - name: Drop the pi user (we don't need it and can't even use it remotely at this point)
  #   user: name={{ admin_user }} state=absent remove=yes

  - name: Install unattended upgrades package and dependencies.
    apt: name={{ packages }} state=present
    vars:
      packages:
        - unattended-upgrades
        - apt-listchanges
        - bsd-mailx

  - name: Updated unattended-upgrades config to reboot if needed,
          auto-fix, reboot time, email, etc
    lineinfile:
      dest: "/etc/apt/apt.conf.d/50unattended-upgrades"
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      state: present
    with_items:
      - regexp: "(\/\/)? ?Unattended-Upgrade::AutoFixInterruptedDpkg \""
        line: Unattended-Upgrade::AutoFixInterruptedDpkg "true";
      - regexp: "(\/\/)? ?Unattended-Upgrade::MinimalSteps \""
        line: Unattended-Upgrade::MinimalSteps "true";
      - regexp: "(\/\/)? ?Unattended-Upgrade::Automatic-Reboot \""
        line: Unattended-Upgrade::Automatic-Reboot "true";
      - regexp: "(\/\/)? ?Unattended-Upgrade::Automatic-Reboot-Time \""
        line: Unattended-Upgrade::Automatic-Reboot-Time "02:00";
      - regexp: "(\/\/)? ?Unattended-Upgrade::Mail \""
        line: Unattended-Upgrade::Mail "{{ admin_email }}";
      - regexp: "(\/\/)? ?Unattended-Upgrade::MailOnlyOnError \""
        line: Unattended-Upgrade::MailOnlyOnError "false";
      - regexp: "(\/\/)? ?Unattended-Upgrade::Remove-Unused-Dependencies \""
        line: Unattended-Upgrade::Remove-Unused-Dependencies "true";
    notify: restart unattended-upgrades

  - name: (Re)configure firewall (ufw)
    tags:
      - firewall
    block:
      - apt: name=ufw state=present
      - ufw: rule=allow port={{ item }}
        with_items:
          - 22     # ssh
          - 80     # http    (mostly to generate/renew certs)
          - 443    # https   (mostly to generate/renew certs)
          - 8123   # Home Assistant
      - ufw: state=enabled policy=reject direction=incoming

  - name: Install certbot (so we can have letsencrypt ssl certificates)
    apt: name=certbot state=present

  - name: Create script that generates/renews/copies certificates as needed
    template:
      src: templates/update_and_copy_certificates.sh.j2
      dest: /root/update_and_copy_certificates.sh
      owner: root
      mode: 0700

  - name: Run the script once (so we have certificates to play with)
    command: bash -lc "/root/update_and_copy_certificates.sh"

  - name: Schedule certbot to rebuild the certs when needed \
          (and copy/fix perms so HomeAssistant can use them)
    cron:
      name: Update ssl certificates
      minute: 0
      hour: 4
      weekday: 0 # Sundays
      user: root
      job: /root/update_and_copy_certificates.sh

  - name: Install packages required for Bluetooth
    apt: name={{ packages }} state=present
    vars:
      packages:
        - bluetooth
        - bluez
        - bluez-firmware
        - libbluetooth-dev

  - name: Build and install RF (433Mhz) control software, then enable our user to run it
    block:
      - apt: name=wiringpi state=present
      - git:
          repo: git://github.com/ninjablocks/433Utils.git
          dest: /root/433Utils
          recursive: yes
      - command: make
        args:
          chdir: /root/433Utils/RPi_utils
      - copy:
          src: /root/433Utils/RPi_utils/{{ item }}
          dest: /usr/bin/{{ item }}
          mode: 0755
          remote_src: yes
        with_items:
          - codesend
          - RFSniffer
      - user: name="{{ admin_user }}" groups=gpio append=yes

  - name: Install and configure LIRC (infrared), using GPIO22 for output and GPIO23 for input
    block:
      - apt: name=lirc state=present
      - lineinfile:
           dest: /boot/config.txt
           regexp: "^#? ?dtoverlay="
           line: "dtoverlay=lirc-rpi,gpio_in_pin=23,gpio_out_pin=22"
           state: present
        notify: reboot
      - blockinfile:
          dest: /etc/modules
          block: |
            lirc_dev
            lirc_rpi gpio_in_pin=23 gpio_out_pin=22
        notify: reboot
      - template:
          src: templates/lirc_hardware_conf.j2
          dest: /etc/lirc/hardware.conf
          owner: root
        notify: restart lirc
      - template:
          src: templates/lirc_options.conf.j2
          dest: /etc/lirc/lirc_options.conf
          owner: root
        notify: restart lirc
      - template:
          src: Sharp_LCDTV-845-039-40B0.lircd.conf.j2
          dest: /etc/lirc/lircd.conf.d/Sharp_LCDTV-845-039-40B0.lircd.conf
        notify: restart lirc

  - name: Provision (or update) Home Assistant configuration and secrets
    tags: update_ha_configs
    block:
    - copy:
        src: homeassistant_config/
        dest: /home/{{ admin_user }}/.homeassistant/
        owner: "{{ admin_user }}"
        group: "{{ admin_user }}"
        mode: 0600
    - template:
        src: templates/homeassistant.secrets.yaml.j2
        dest: /home/{{ admin_user }}/.homeassistant/secrets.yaml
        owner: "{{ admin_user }}"
        group: "{{ admin_user }}"
        mode: 0600

  - name: Install Home Assistant (on a virtualenv, on my user)
    block:
      - apt: name={{ packages }} state=present
        vars:
          packages:
            - python3-pip
            - python3-venv
            - build-essential
            - libssl-dev
            - libffi-dev
            - python3-dev
      - pip:
          name: virtualenv
          executable: pip3
      - pip:
          name:
            - wheel
            - homeassistant
          virtualenv: /home/{{ admin_user }}/homeassistant
        become: no
      - template:
          src: templates/homeassistant.service.j2
          dest: /lib/systemd/system/homeassistant.service
          mode: 0644
      - systemd:
          daemon_reload: yes
          name: homeassistant.service
          enabled: true
          state: started
